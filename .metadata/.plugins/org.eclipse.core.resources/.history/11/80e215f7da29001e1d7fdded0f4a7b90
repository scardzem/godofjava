package study.d.collection;

import java.util.ArrayList;

@SuppressWarnings("all")  //@SuppressWarnings("unused")
public class ListSample {
	public static void main(String[] args) {
		ListSample sample=new ListSample();
        sample.checkArrayList3();
    }
    public void checkArrayList1() {
        ArrayList<String> list1 = new ArrayList<>();
//        ArrayList<String> list1 = new ArrayList<>(100); // ArrayList의 기본 크기는 10이다. 데이터의 수가 예상 가능하면 생성자에 크기를 미리 지정할 수 있다(성능에 영향 있음).
        list1.add("A");
        list1.add("B");
        list1.add("C");
        list1.add("D");
        list1.add("E");
    	for(String temp:list1 ) {
    		System.out.println(temp);
    	}
    }
    public void checkArrayList2() {
    	ArrayList<String> list = new ArrayList<>();
    	list.add("A");
        list.add("B");
        list.add("C");
        list.add("D");
        list.add("E");
        list.add(1,"A2");
        list.add(1,"A1");
    	for(String temp:list) {
    		System.out.println(temp);
    	}
    }
    public void checkArrayList3() {
    	ArrayList<String> list = new ArrayList<>();
    	list.add("A");
    	list.add("B");
    	list.add("C");
    	list.add("D");
    	list.add("E");
    	ArrayList<String> list2 = new ArrayList<>();
    	list2.add("0");
    	list2.addAll(list);  //addAll() 메소드로 Collection 객체의 모든 요소를 추가한다.
    	ArrayList<String> list3 = new ArrayList<>(list);  //생성자에 Collection객체를 매개변수로 넣으면 기존 객체를 복사하여 생성할 수 있다.
    	ArrayList<String> list4 = new ArrayList<>();
    	list4.addAll(list);
    	for(String temp : list3) {
    		System.out.println("생성자로 list 복사 : "+temp);
    	}
    	for(String temp : list2) {
    		System.out.println("addAll() 메소드로 list 추가 : " + temp);
    	}
//    	list = list3;
    	System.out.println(list.hashCode());
    	System.out.println(list2.hashCode());
    	System.out.println(list3.hashCode());
    	System.out.println(list3.hashCode());
    	if(list == list3) {
    		System.out.println("같은 객체");
    	} else {
    		System.out.println("다른 객체");
    	}
    	
    }
    
    
    
    
}
