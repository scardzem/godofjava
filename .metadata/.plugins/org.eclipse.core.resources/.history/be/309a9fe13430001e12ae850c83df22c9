package e.io;

import static java.io.File.separator; //File.separator로 사용할 수도 있고 이렇게 사용할 수도 있다.(709, 725)

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;

public class ManageTextFile {

	public static void main(String[] args) {
		ManageTextFile manager = new ManageTextFile();
		int numberCount = 10;
		String fullPath = separator+"godofjavaEclipse"+separator+"text"
							+separator+"number.txt";
		manager.writeFile(fullPath, numberCount);
	}
	public void writeFile(String fileName, int numberCount) {
		FileWriter fileWriter = null;  // 1) 파일에 쓰는 작업을 하기 위해서 FileFilter 객체 생성.
		BufferedWriter bufferedWriter = null;  // 2) 파일에 쓰기작업을 할 때 버퍼를 사용하기 위해 BufferedWriter 객체 생성
		try {
			fileWriter = new FileWriter(fileName);
			bufferedWriter = new BufferedWriter(fileWriter);
			for(int i=0;i<=numberCount;i++) {
				bufferedWriter.write(Integer.toString(i));  // 3) bufferedWriter객체의 write()메소드로 데이터 입력.
				bufferedWriter.newLine();  // 4) 줄바꿈하는 메소드. 이걸 하지 않으면 한 줄에 모든 결과가 출력된다.
			}
			System.out.println("Write Success!!!!!");
		} catch(IOException e) {
			e.printStackTrace();
		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			if(bufferedWriter != null) {
				try {
					bufferedWriter.close();
				} catch(IOException e) {
					e.printStackTrace();
				}
			}
			if(fileWriter != null) {
				try {
					fileWriter.close();
				}catch(IOException e) {
					e.printStackTrace();
				}
			}
		}
	}

}
